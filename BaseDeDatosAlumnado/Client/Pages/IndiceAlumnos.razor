@page "/alumnos"
@inject IHttpService http
<h3>Alumnos</h3>
<a class = "btn btn-success" href="alumnos/crear">Nuevo</a>
<br />
<table>
    <tr>
        <th>NombreAlumno</th>
        <th>DniAlumno</th>
    </tr>
    @if(alumnos == null)
    {
        <tr>Cargando.....</tr>
    }
    else if(alumnos.Count == 0) // Si todavia no cargue ningun alumno.
    {
        <tr>No existen Alumnos</tr>
    }
    else
    {
        @foreach(var item in alumnos) //Quiero se muestre la lista de registros de alumnos.
        {
            <tr>
                <td>@item.NombreCompletoAlumno</td>
                <td>@item.DNI</td>
                <td><a class = "btn btn-success" href="alumnos/editar/@item.Id">
                    Editar Alumno
                    </a>
                </td>
                <td><button class = "btn btn-warning" @onclick = "()=>Eliminar(item)"> Eliminar Alumno</button></td>
            </tr>
        }   
    } 
</table>

<Confirmacion @ref = "confirmacion"
              onConfirm = "GrabarEliminar"
              onCancel = "Cancelar">
              <h1>Eliminar Alumno</h1>
              
    
    <div>¿Desea eliminar el alumno @eliminarAlumno.NombreCompletoAlumno?</div>
</Confirmacion>



@code {

    List <Alumnado.BD.Data.Entidades.Alumno> alumnos;
    Confirmacion confirmacion;
    //string NomAlumno = "";
    //string DniAlumno = "";
    Alumnado.BD.Data.Entidades.Alumno eliminarAlumno;


    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        await Leer();
    }

    private async Task Leer()
    {
        var respuestaHttp = await http.Get<List<Alumnado.BD.Data.Entidades.Alumno>>("api/Alumnos");
        if (!respuestaHttp.Error)
        {
            alumnos = respuestaHttp.Respuesta;
        }
    }

    private void Cancelar()
    {
        confirmacion.Ocultar();
        eliminarAlumno = null;
    }

    private void Eliminar(Alumnado.BD.Data.Entidades.Alumno alumnoEliminar)
    {
        confirmacion.Mostrar();
        eliminarAlumno = alumnoEliminar;
    }
    private async Task GrabarEliminar()
    {
        var respuesta = await http.Delete($"api/Alumnos/{eliminarAlumno.Id}");
        if (respuesta.Error)
        {
            var body = await respuesta.GetBody();
        }
        Cancelar();
        await Leer();
    }
    
}
